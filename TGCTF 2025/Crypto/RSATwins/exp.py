import hashlib
from Crypto.Util.number import long_to_bytes
from gmpy2 import gmpy2

n = 100885785256342169056765112203447042910886647238787490462506364977429519290706204521984596783537199842140535823208433284571495132415960381175163434675775328905396713032321690195499705998621049971024487732085874710868565606249892231863632731481840542506411757024315315311788336796336407286355303887021285839839
e = 3
c1 = 41973910895747673899187679417443865074160589754180118442365040608786257167532976519645413349472355652086604920132172274308809002827286937134629295632868623764934042989648498006706284984313078230848738989331579140105876643369041029438708179499450424414752031366276378743595588425043730563346092854896545408366
c2 = 41973912583926901518444642835111314526720967879172223986535984124576403651553273447618087600591347032422378272332279802860926604693828116337548053006928860031338938935746179912330961194768693506712533420818446672613053888256943921222915644107389736912059397747390472331492265060448066180414639931364582445814
x1, x2 = 307, 7
# c1 = pow(m + hash(x1), e, n)
# c2 = pow(m + hash(x2), e, n)
h1, h2 = int(hashlib.md5(str(x1).encode()).hexdigest(), 16), int(hashlib.md5(str(x2).encode()).hexdigest(), 16)

res = (c1 - c2) // (h1 - h2)
det = int(gmpy2.iroot((3 * (h1 + h2))**2 - 4 * 3 * (h1**2 + h1 * h2 + h2**2 - res), 2)[0])

sol1 = (det - 3 * (h1 + h2)) // (2 * 3)
print(long_to_bytes(sol1))
print(sol1)


# import hashlib
# from Crypto.Util.number import long_to_bytes
#
#
# def related_message_attack(c1, c2, diff, e, n):
#     PRx.<x> = PolynomialRing(Zmod(n))
#     g1 = x ^ e - c1
#     g2 = (x + diff) ^ e - c2
#
#     def gcd(g1, g2):
#         while g2:
#             g1, g2 = g2, g1 % g2
#         return g1.monic()
#
#     return -gcd(g1, g2)[0]
#
# def myhash(x):
#     return int(hashlib.md5(str(x).encode()).hexdigest(), 16)
#
# n = 100885785256342169056765112203447042910886647238787490462506364977429519290706204521984596783537199842140535823208433284571495132415960381175163434675775328905396713032321690195499705998621049971024487732085874710868565606249892231863632731481840542506411757024315315311788336796336407286355303887021285839839
# e = 3
# c1 = 41973910895747673899187679417443865074160589754180118442365040608786257167532976519645413349472355652086604920132172274308809002827286937134629295632868623764934042989648498006706284984313078230848738989331579140105876643369041029438708179499450424414752031366276378743595588425043730563346092854896545408366
# c2 = 41973912583926901518444642835111314526720967879172223986535984124576403651553273447618087600591347032422378272332279802860926604693828116337548053006928860031338938935746179912330961194768693506712533420818446672613053888256943921222915644107389736912059397747390472331492265060448066180414639931364582445814
# x1, x2 = 307, 7
# diff=myhash(x2)-myhash(x1)
# m1=related_message_attack(c1, c2, diff, e, n)
# print(m1-myhash(x1))
# print(long_to_bytes(m1-myhash(x1)))


# # #m1=m+hash30
# # #m2=m+hash7
# # # c1 = pow(m1, e, n)
# # # c2 = pow(m2, e, n)



